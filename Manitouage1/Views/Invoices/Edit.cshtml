@model Manitouage1.Models.Invoice

@{
    var statusCreated = Manitouage1.Models.Invoice.Status.Created;
    var statusPaid = Manitouage1.Models.Invoice.Status.Paid;
}

@using( Html.BeginForm() ) {
    @Html.AntiForgeryToken()

<div class="form-horizontal">
  <h4>Invoice</h4>
  <hr />
  @Html.ValidationSummary( true, "", new {
    @class = "text-danger"
  } )
  @Html.HiddenFor( model => model.invoiceId )

  <div class="form-group">
    @Html.LabelFor( model => model.created, htmlAttributes: new {
      @class = "control-label col-md-2"
    } )
    <div class="col-md-10">
      @Html.EditorFor( model => model.created, new {
         htmlAttributes = new {
           @class = "form-control"
         }
       } )
      @Html.ValidationMessageFor( model => model.created, "", new {
         @class = "text-danger"
       } )
    </div>
  </div>

  @if( Model.status != statusCreated ) {
    <div class="form-group">
      @Html.LabelFor( model => model.issued, htmlAttributes: new {
   @class = "control-label col-md-2"
 } )
      <div class="col-md-10">
        @Html.EditorFor( model => model.issued, new {
     htmlAttributes = new {
       @class = "form-control"
     }
   } )
        @Html.ValidationMessageFor( model => model.issued, "", new {
     @class = "text-danger"
   } )
      </div>
    </div>
    if( Model.status == statusPaid ) {
      <div class="form-group">
        @Html.LabelFor( model => model.paid, htmlAttributes: new {
     @class = "control-label col-md-2"
   } )
        <div class="col-md-10">
          @Html.EditorFor( model => model.paid, new {
       htmlAttributes = new {
         @class = "form-control"
       }
     } )
          @Html.ValidationMessageFor( model => model.paid, "", new {
       @class = "text-danger"
     } )
        </div>
      </div>
    }
  } else {
    <div class="form-group">
      @Html.LabelFor( model => model.status, htmlAttributes: new {
          @class = "control-label col-md-2"
        } )
      <div class="col-md-10">
        @Html.EnumDropDownListFor( model => model.status, htmlAttributes: new {
           @class = "form-control"
         } )
        @Html.ValidationMessageFor( model => model.status, "", new {
           @class = "text-danger"
         } )
      </div>
    </div>
  }

  <div class="form-group">
    @Html.LabelFor( model => model.Id, "Id", htmlAttributes: new {
        @class = "control-label col-md-2"
      } )
    <div class="col-md-10">
      @Html.DropDownList( "Id", null, htmlAttributes: new {
         @class = "form-control"
       } )
      @Html.ValidationMessageFor( model => model.Id, "", new {
         @class = "text-danger"
       } )
    </div>
  </div>

  <div class="form-group">
    <div class="col-md-offset-2 col-md-10">
      <input type="submit" value="Save" class="btn btn-default" />
    </div>
  </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
