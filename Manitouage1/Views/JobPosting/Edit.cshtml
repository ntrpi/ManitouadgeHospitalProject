@model Manitouage1.Models.ViewModels.UpdateJobPosting
@{
    ViewBag.Title = "Edit";
}

<div class="col-12 pl-5 pr-5">

    <div>
        @Html.ActionLink("Back to List", "List")
    </div>

    <h2 class="mt-3 mb-5">Edit Job Posting</h2>

    @using (Html.BeginForm("Edit", "JobPosting", new { id = Model.jobposting.jobPostingId }, FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.jobposting.jobPostingId, new { Name = "jobPostingId" })

            <div class="form-group row">
                @Html.LabelFor(model => model.jobposting.jobNumber, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.jobposting.jobNumber, new { htmlAttributes = new { @class = "form-control", Name = "jobNumber" } })
                    @Html.ValidationMessageFor(model => model.jobposting.jobNumber, "", new { @class = "text-danger", data_valmsg_for = "jobNumber" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.jobposting.jobTitle, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.jobposting.jobTitle, new { htmlAttributes = new { @class = "form-control", Name = "jobTitle" } })
                    @Html.ValidationMessageFor(model => model.jobposting.jobTitle, "", new { @class = "text-danger", data_valmsg_for = "jobTitle" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.jobposting.jobType, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.jobposting.jobType, new { htmlAttributes = new { @class = "form-control", Name = "jobType" } })
                    @Html.ValidationMessageFor(model => model.jobposting.jobType, "", new { @class = "text-danger", data_valmsg_for = "jobType" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.jobposting.jobDescription, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.jobposting.jobDescription, new { @class = "form-control admin", Name = "jobDescription" })
                    @Html.ValidationMessageFor(model => model.jobposting.jobDescription, "", new { @class = "text-danger", data_valmsg_for = "jobDescription" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.jobposting.salary, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.jobposting.salary, new { htmlAttributes = new { @class = "form-control", Name = "salary" } })
                    @Html.ValidationMessageFor(model => model.jobposting.salary, "", new { @class = "text-danger", data_valmsg_for = "salary" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.jobposting.closingDate, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.jobposting.closingDate, new { htmlAttributes = new { @class = "form-control", Name = "closingDate" } })
                    @Html.ValidationMessageFor(model => model.jobposting.closingDate, "", new { @class = "text-danger", data_valmsg_for = "closingDate" })
                </div>
            </div>
           
            <div class="form-group row">
                @Html.LabelFor(model => model.jobposting.departmentId, "departmentId", htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
                <div class="col-md-10">
                    <select name="departmentId">
                        @foreach (var department in Model.alldepartments)
                        {

                            <option value="@department.departmentId" @if (department.departmentId == Model.jobposting.departmentId) { <text> selected</text> }>@department.departmentId - @department.departmentName</option>
                        }
                    </select>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-info my-2 my-sm-0" />
                </div>
            </div>
        </div>

    }

</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
