@model Manitouage1.Models.ViewModels.UpdateJobPosting
@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "JobPosting", new { id = Model.jobposting.jobPostingId }, FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>JobPosting</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.jobposting.jobPostingId, new { Name = "jobPostingId" })

    <div class="form-group">
        @Html.LabelFor(model => model.jobposting.jobNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.jobposting.jobNumber, new { htmlAttributes = new { @class = "form-control", Name = "jobNumber" } })
            @Html.ValidationMessageFor(model => model.jobposting.jobNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.jobposting.jobTitle, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.jobposting.jobTitle, new { htmlAttributes = new { @class = "form-control", Name = "jobTitle" } })
            @Html.ValidationMessageFor(model => model.jobposting.jobTitle, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.jobposting.jobType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.jobposting.jobType, new { htmlAttributes = new { @class = "form-control", Name = "jobType" } })
            @Html.ValidationMessageFor(model => model.jobposting.jobType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.jobposting.jobDescription, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.jobposting.jobDescription, new { htmlAttributes = new { @class = "form-control", Name = "jobDescription" } })
            @Html.ValidationMessageFor(model => model.jobposting.jobDescription, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.jobposting.salary, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.jobposting.salary, new { htmlAttributes = new { @class = "form-control", Name = "salary" } })
            @Html.ValidationMessageFor(model => model.jobposting.salary, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.jobposting.closingDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.jobposting.closingDate, new { htmlAttributes = new { @class = "form-control", Name = "closingDate" } })
            @Html.ValidationMessageFor(model => model.jobposting.closingDate, "", new { @class = "text-danger" })
        </div>
    </div>
    @*
        <div class="form-group">
            @Html.LabelFor(model => model.jobposting.departmentId, "departmentId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("departmentId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.jobposting.departmentId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.jobposting.departmentName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.jobposting.departmentName, new { htmlAttributes = new { @class = "form-control", Name = "departmentName" } })
                @Html.ValidationMessageFor(model => model.jobposting.departmentName, "", new { @class = "text-danger" })
            </div>
        </div>
    *@

    <div class="form-group">
        @Html.LabelFor(model => model.jobposting.departmentId, "departmentId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select name="departmentId">
                @foreach (var department in Model.alldepartments)
                {


                
                    <option value="@department.departmentId" @if (department.departmentId == Model.jobposting.departmentId) { <text>selected</text> }>@department.departmentId - @department.departmentName</option>
                }
            </select>



        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "List")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
